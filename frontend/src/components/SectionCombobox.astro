---
import type {Section} from "../types";
const {sections} = Astro.props;
---

<label>
    <select name="Filter by section" class="section-select w-fit border p-2 rounded">
        <option data-section-sectionCourses="[]">All Sections</option>
        {sections
            .filter((sec: Section) => sec.type === 'Requirement')
            .map((section: Section) => (
                <option data-section-courses={JSON.stringify(section.courses)}>
                    {section.level} {section.type}s {section.name ? ` - ${section.name}` : ''}
                </option>
        ))}
    </select>
</label>

<script>
    const selectElement = document.querySelector('.section-select');

    selectElement?.addEventListener('change', (e) => {
        const target = e.target as HTMLSelectElement;
        const selectedOption = target.selectedOptions[0];
        const sectionCourses = JSON.parse(selectedOption.dataset.sectionCourses || '[]');

        if (sectionCourses.length === 0) {
            resetFilter();
            return;
        }

        filterCoursesBySection(sectionCourses);
    });

    function filterCoursesBySection(sectionCourses: number[]) {
        document.querySelectorAll('course-card').forEach(card => {
            card.classList.add('opacity-50');
        });

        sectionCourses.forEach(courseId => {
            const courseCard = document.querySelector(`course-card[id="${courseId}"]`);
            courseCard?.classList.remove('opacity-50');
        });
    }

    function resetFilter() {
        document.querySelectorAll('course-card').forEach(card => {
            card.classList.remove('opacity-50');
        });
    }
</script>
