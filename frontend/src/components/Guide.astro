---
import Level from "../components/Level.astro";
import {$studyPlan, fetchStudyPlan} from "../stores/studyPlan";
import {type Course} from "../types";

await fetchStudyPlan(1);

const studyPlan = $studyPlan.get();
if (!studyPlan) return;
const {program, courses, track, startAcademicYear} = studyPlan;
const degree = program.degree.charAt(0).toUpperCase() + program.degree.slice(1).toLowerCase();

let currentLevel = 1;
let levels: Map<number, Course[]> = new Map();

while (true) {
    const levelCourses = Object.values(courses).filter(c => c.sequences.level === currentLevel);

    if (levelCourses.length === 0) break;

    levels.set(currentLevel, levelCourses);

    currentLevel++;
}
---

<div class="max-w-screen-2xl flex flex-col gap-6 p-6 border-x h-full">
    <header class="flex flex-col gap-1">
        <h1 class="text-2xl font-bold">{degree}s in {program.name} ({program.code})</h1>
        <h2 class="opacity-60">
            Study Plan {startAcademicYear}/{startAcademicYear + 1}
            {track ? ` - ${track.name}` : ''}
        </h2>
    </header>
    <div class="flex flex-row justify-center gap-2">
        {Array.from(levels.entries()).map(([level, levelCourses]) => (
                <Level
                        level={level}
                        courses={levelCourses}
                />
        ))}
    </div>
</div>
