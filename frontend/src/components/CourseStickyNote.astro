---
const {id, code, name, creditHours, prerequisites, prerequisiteSequence} = Astro.props;
---

<sticky-note
        id={id}
        data-prerequisites={JSON.stringify(prerequisites)}
        data-prerequisite-sequence={JSON.stringify(prerequisiteSequence)}
>
    <div class="sticky-note relative bg-gray-200 shadow w-40 h-40 p-3 hover:bg-blue-200 transition-all rounded-md">
        <h1 class="font-bold">{code}</h1>
        <p class="line-clamp-3">{name}</p>
        <p class="text-sm absolute bottom-3 right-3 opacity-60">{creditHours} Cr.</p>
    </div>
</sticky-note>

<script>
    import type { CoursePrerequisite } from "../types";

    class StickyNote extends HTMLElement {
        constructor() {
            super();

            const prerequisites: Set<CoursePrerequisite> = new Set(JSON.parse(
                this.dataset.prerequisites || '[]'
            ));

            const prerequisiteSequence: Set<CoursePrerequisite> = new Set(JSON.parse(
                this.dataset.prerequisiteSequence || '[]'
            ));

            this.addEventListener('mouseenter', () => {
                this.highlightPrerequisiteSequence(prerequisiteSequence);
                this.highlightPrerequisites(prerequisites);
            });

            this.addEventListener('mouseleave', () => this.resetHighlights());
        }

        highlightPrerequisites(prerequisites: Set<CoursePrerequisite>) {
            prerequisites.forEach(prerequisite => {
                const stickyNote = document.querySelector(
                    `sticky-note[id="${prerequisite.prerequisite}"] > div`
                );
                stickyNote?.classList.add('bg-orange-300');
            });
        }

        highlightPrerequisiteSequence(prerequisiteSequence: Set<CoursePrerequisite>) {
            prerequisiteSequence.forEach((prerequisite) => {
                const stickyNote = document.querySelector(
                    `sticky-note[id="${prerequisite.prerequisite}"] > div`
                );
                stickyNote?.classList.add('bg-yellow-200');
            });
        }

        resetHighlights() {
            const stickyNotes = document.querySelectorAll('sticky-note > div');
            stickyNotes.forEach(n => {
                n.classList.remove('bg-orange-300');
                n.classList.remove('bg-yellow-200');
            });
        }
    }

    customElements.define('sticky-note', StickyNote);
</script>